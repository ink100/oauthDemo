server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: oauth2-demo

  datasource:
    url: jdbc:mysql://xxx:13306/oauth2?useUnicode=true&characterEncoding=UTF-8
    #&serverTimezone=Asia/Shanghai
    username: root
    password: xxx
    driver-class-name: com.mysql.cj.jdbc.Driver
#??c??
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
    serialization:
      write-dates-as-timestamps: false



    data:
    redis:
      host: xxx
      port: 6379
      password: xxx
      timeout: 6000ms

  # OAuth2 Client Configuration

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: your_github_client_id
            client-secret: your_github_client_secret
            scope: read:user,user:email
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/github"
            client-name: GitHub

        provider:
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id

      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080  # JWT issuer URI for Resource Server validation

# MyBatis-Plus Configuration
mybatis-plus:
  mapper-locations: classpath:/mapper/**/*.xml
  global-config:
    db-config:
      logic-delete-field: is_deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    map-underscore-to-camel-case: true

# Redis-based token storage configuration (custom)
oauth2:
  token:
    store-type: redis   # Use Redis to store OAuth2 tokens
    access-token-expiration: 3600  # Access token expiration time in seconds
    refresh-token-expiration: 86400  # Refresh token expiration time in seconds

logging:
  level:
    org.springframework.security: DEBUG
    com.daym.oauth2: DEBUG
